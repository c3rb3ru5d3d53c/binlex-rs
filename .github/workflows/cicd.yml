name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-latest, windows-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Dependencies (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libssl-dev

      - name: Install Dependencies (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew update
          brew install openssl

      - name: Enable Developer Command Prompt (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ilammy/msvc-dev-cmd@v1.7.0

      - name: Build Project
        run: cargo build --release

      - name: Run Tests
        run: cargo test --verbose

      - name: Package Binary
        run: |
          mkdir -p dist
          if [ ${{ matrix.os }} == 'windows-latest' ]; then
            cp target\release\binlex.exe dist/
            cp target/release/blyara.exe dist/
          else
            cp target/release/binlex dist/
            cp target/release/blyara dist/
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-artifacts
          path: dist/
